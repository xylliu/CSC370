SELECT DISTINCT MOVIE FROM STARREDIN WHERE CELEB='Tom Cruise' INTERSECT SELECT MOVIE FROM STARREDIN WHERE CELEB LIKE 'Pen%C%';//#1

SELECT DISTINCT CELEB FROM STARREDIN WHERE MOVIE IN (SELECT movie FROM STARREDIN WHERE celeb = 'Nicolas Cage') AND NOT celeb = 'Nicolas Cage';//#2

SELECT DISTINCT CELEB AS COSTAR, MOVIE 
FROM STARREDIN WHERE movie 
IN (SELECT DISTINCT MOVIE FROM STARREDIN WHERE celeb IN (SELECT DISTINCT CELEB2 FROM RELATIONSHIPS WHERE CELEB1 = 'Tom Cruise') 
INTERSECT SELECT MOVIE FROM STARREDIN WHERE CELEB = 'Tom Cruise') 
AND celeb IN (SELECT DISTINCT CELEB2 FROM RELATIONSHIPS WHERE CELEB1 = 'Tom Cruise') ;//#3

SELECT DISTINCT celeb1,celeb2, movie 
FROM STARREDIN, RELATIONSHIPS 
WHERE STARREDIN.celeb = RELATIONSHIPS.celeb1
INTERSECT 
SELECT DISTINCT celeb1, celeb2, movie
FROM STARREDIN, RELATIONSHIPS 
WHERE STARREDIN.celeb = RELATIONSHIPS.celeb2 AND celeb1<celeb2;//#4


SELECT celeb, COUNT(movie) FROM STARREDIN GROUP BY celeb HAVING COUNT(movie)>= 10 ORDER BY count(movie) DESC;//#5

CREATE VIEW Relation1 AS 
  SELECT celeb1 AS c1, celeb2 AS c2 FROM RELATIONSHIPS WHERE celeb1<celeb2;
CREATE VIEW Relation2 AS 
  SELECT celeb1 AS c2, celeb2 AS c3 FROM RELATIONSHIPS WHERE celeb1<celeb2;
SELECT c3 AS c1, c1 AS c2, c2 AS c3 FROM Relation1 NATURAL JOIN Relation2;
DROP VIEW Relation1;
DROP VIEW Relation2;//#6


CREATE VIEW celebMovieCounts AS
   SELECT celeb AS c, COUNT(movie) AS count FROM STARREDIN GROUP BY celeb;

SELECT DISTINCT celeb1, celeb2, n1, n2
FROM ENEMIES, (SELECT celebMovieCounts.c AS c1, count AS n1 FROM celebMovieCounts) 
NATURAL JOIN (SELECT celebMovieCounts.c AS c2, count AS n2 FROM celebMovieCounts)
WHERE Enemies.celeb1=c1 AND Enemies.celeb2=c2;//#7

SELECT celeb, COUNT(album) FROM RELEASES GROUP BY celeb HAVING COUNT(album)>= 2 ORDER BY count(album) DESC;//#8

SELECT DISTINCT celeb FROM STARREDIN JOIN RELEASES USING(celeb);//#9

SELECT DISTINCT celeb, count(DISTINCT movie) AS number_of_movies, count(DISTINCT album) AS number_of_albums 
FROM STARREDIN JOIN RELEASES USING(celeb)
GROUP BY celeb;//#10

SELECT celeb1, celeb2,started,ended
FROM RELATIONSHIPS 
WHERE started = (SELECT min(started) FROM RELATIONSHIPS ) AND celeb1<celeb2
UNION
SELECT celeb1, celeb2,started,ended
FROM RELATIONSHIPS
WHERE started = (SELECT max(started)FROM RELATIONSHIPS) AND celeb1<celeb2;//#11
